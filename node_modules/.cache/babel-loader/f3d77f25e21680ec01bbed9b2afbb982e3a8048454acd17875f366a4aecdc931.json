{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\1111\\\\resource\\\\src\\\\components\\\\Products.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, Container, Dropdown, Form, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Products() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [reviewer, setReviewer] = useState('');\n  const [comment, setComment] = useState('');\n  const [rating, setRating] = useState(1);\n  const [validationError, setValidationError] = useState({});\n  const [successMessage, setSuccessMessage] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:9999/products').then(response => response.json()).then(data => {\n      setProducts(data);\n      const uniqueCategories = [...new Set(data.map(product => product.category))];\n      setCategories(uniqueCategories);\n    }).catch(error => console.error('Error fetching products:', error));\n  }, []);\n  const filteredProducts = selectedCategory ? products.filter(product => product.category === selectedCategory) : products;\n  const getAverageRating = reviews => {\n    if (!reviews || reviews.length === 0) return 0;\n    const sum = reviews.reduce((total, review) => total + review.rating, 0);\n    return (sum / reviews.length).toFixed(1);\n  };\n  const handleProductSelect = product => {\n    setSelectedProduct(product);\n    setReviewer('');\n    setComment('');\n    setRating(1);\n    setValidationError({});\n    setSuccessMessage('');\n  };\n  const handleSubmitReview = () => {\n    const errors = {};\n    if (!reviewer.trim()) errors.reviewer = 'Reviewer Name is required';\n    if (!comment.trim()) errors.comment = 'Comment is required';\n    if (Object.keys(errors).length > 0) {\n      setValidationError(errors);\n      return;\n    }\n    const newReview = {\n      reviewerName: reviewer,\n      comment: comment,\n      rating: parseInt(rating),\n      date: new Date().toISOString()\n    };\n    const updatedProduct = {\n      ...selectedProduct,\n      reviews: [...(selectedProduct.reviews || []), newReview]\n    };\n    fetch(`http://localhost:9999/products/${selectedProduct.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        reviews: updatedProduct.reviews\n      })\n    }).then(response => response.json()).then(data => {\n      const updatedProducts = products.map(p => p.id === selectedProduct.id ? {\n        ...p,\n        reviews: data.reviews\n      } : p);\n      setProducts(updatedProducts);\n      setSuccessMessage('Thanks for your review!');\n\n      //reset form\n      setReviewer('');\n      setComment('');\n      setRating(1);\n      setValidationError({});\n    }).catch(error => console.error('Error submitting review:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"Products Review System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            variant: \"secondary\",\n            id: \"dropdown-basic\",\n            children: selectedCategory ? selectedCategory : '-- Select all category --'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => setSelectedCategory(''),\n              children: \"All categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => setSelectedCategory(category),\n              children: category\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 8,\n        className: \"text-end\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: () => window.location.href = '/reviews',\n          children: \"Show Review List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: filteredProducts.map(product => /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            sm: 6,\n            md: 4,\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"h-100\",\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                className: \"d-flex flex-column\",\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: product.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Price: \", product.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Category: \", product.category]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Average Rate: \", getAverageRating(product.reviews)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  onClick: () => handleProductSelect(product),\n                  className: \"mt-auto\",\n                  children: \"Add New Review\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this)\n          }, product.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border rounded p-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Reviews details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), selectedProduct ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Product: \", selectedProduct.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Title: \", selectedProduct.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Category: \", selectedProduct.category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Price: \", selectedProduct.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), successMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 text-success\",\n              children: successMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mt-3\",\n                children: \"Add a new Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Reviewer Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    value: reviewer,\n                    onChange: e => setReviewer(e.target.value),\n                    isInvalid: !!validationError.reviewer\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 49\n                  }, this), validationError.reviewer && /*#__PURE__*/_jsxDEV(Form.Text, {\n                    className: \"text-danger\",\n                    children: validationError.reviewer\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Comment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 3,\n                    value: comment,\n                    onChange: e => setComment(e.target.value),\n                    isInvalid: !!validationError.comment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 49\n                  }, this), validationError.comment && /*#__PURE__*/_jsxDEV(Form.Text, {\n                    className: \"text-danger\",\n                    children: validationError.comment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex\",\n                    children: [1, 2, 3, 4, 5].map(value => /*#__PURE__*/_jsxDEV(Form.Check, {\n                      inline: true,\n                      type: \"radio\",\n                      label: value,\n                      name: \"rating\",\n                      value: value,\n                      checked: rating === value,\n                      onChange: () => setRating(value),\n                      className: \"me-3\"\n                    }, value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 57\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"warning\",\n                  onClick: handleSubmitReview,\n                  children: \"Send Review\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger\",\n            children: \"Select a product to Review!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n_s(Products, \"NBDjpwlNZXWuwHn7PW6qpcLnknM=\");\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useEffect","useState","Button","Card","Col","Container","Dropdown","Form","Row","jsxDEV","_jsxDEV","Fragment","_Fragment","Products","_s","products","setProducts","categories","setCategories","selectedCategory","setSelectedCategory","selectedProduct","setSelectedProduct","reviewer","setReviewer","comment","setComment","rating","setRating","validationError","setValidationError","successMessage","setSuccessMessage","fetch","then","response","json","data","uniqueCategories","Set","map","product","category","catch","error","console","filteredProducts","filter","getAverageRating","reviews","length","sum","reduce","total","review","toFixed","handleProductSelect","handleSubmitReview","errors","trim","Object","keys","newReview","reviewerName","parseInt","date","Date","toISOString","updatedProduct","id","method","headers","body","JSON","stringify","updatedProducts","p","className","children","fileName","_jsxFileName","lineNumber","columnNumber","xs","md","Toggle","variant","Menu","Item","onClick","index","window","location","href","sm","Body","Title","title","Text","price","Group","Label","Control","type","value","onChange","e","target","isInvalid","as","rows","Check","inline","label","name","checked","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Downloads/1111/resource/src/components/Products.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, Container, Dropdown, Form, Row } from 'react-bootstrap';\n\nfunction Products() {\n    const [products, setProducts] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [selectedCategory, setSelectedCategory] = useState('');\n    const [selectedProduct, setSelectedProduct] = useState(null);\n    const [reviewer, setReviewer] = useState('');\n    const [comment, setComment] = useState('');\n    const [rating, setRating] = useState(1);\n    const [validationError, setValidationError] = useState({});\n    const [successMessage, setSuccessMessage] = useState('');\n\n\n    useEffect(() => {\n        fetch('http://localhost:9999/products')\n            .then(response => response.json())\n            .then(data => {\n                setProducts(data);\n\n                const uniqueCategories = [...new Set(data.map(product => product.category))];\n                setCategories(uniqueCategories);\n            })\n            .catch(error => console.error('Error fetching products:', error));\n    }, []);\n\n    const filteredProducts = selectedCategory\n        ? products.filter(product => product.category === selectedCategory)\n        : products;\n\n    const getAverageRating = (reviews) => {\n        if (!reviews || reviews.length === 0) return 0;\n        const sum = reviews.reduce((total, review) => total + review.rating, 0);\n        return (sum / reviews.length).toFixed(1);\n    };\n \n    const handleProductSelect = (product) => {\n        setSelectedProduct(product);\n        setReviewer('');\n        setComment('');\n        setRating(1);\n        setValidationError({});\n        setSuccessMessage('');\n    };\n\n    const handleSubmitReview = () => {\n\n        const errors = {};\n        if (!reviewer.trim()) errors.reviewer = 'Reviewer Name is required';\n        if (!comment.trim()) errors.comment = 'Comment is required';\n        \n        if (Object.keys(errors).length > 0) {\n            setValidationError(errors);\n            return;\n        }\n\n        const newReview = {\n            reviewerName: reviewer,\n            comment: comment,\n            rating: parseInt(rating),\n            date: new Date().toISOString()\n        };\n\n\n        const updatedProduct = {\n            ...selectedProduct,\n            reviews: [...(selectedProduct.reviews || []), newReview]\n        };\n\n        fetch(`http://localhost:9999/products/${selectedProduct.id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ reviews: updatedProduct.reviews })\n        })\n            .then(response => response.json())\n            .then(data => {\n\n                const updatedProducts = products.map(p => \n                    p.id === selectedProduct.id ? { ...p, reviews: data.reviews } : p\n                );\n                setProducts(updatedProducts);\n                setSuccessMessage('Thanks for your review!');\n                \n                //reset form\n                setReviewer('');\n                setComment('');\n                setRating(1);\n                setValidationError({});\n            })\n            .catch(error => console.error('Error submitting review:', error));\n    };\n\n    return (\n        <Container className=\"mt-4\">\n            <h1 className=\"text-center mb-4\">Products Review System</h1>\n            \n            <Row className=\"mb-4\">\n                <Col xs={12} md={4}>\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                            {selectedCategory ? selectedCategory : '-- Select all category --'}\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item onClick={() => setSelectedCategory('')}>\n                                All categories\n                            </Dropdown.Item>\n                            {categories.map((category, index) => (\n                                <Dropdown.Item \n                                    key={index} \n                                    onClick={() => setSelectedCategory(category)}\n                                >\n                                    {category}\n                                </Dropdown.Item>\n                            ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Col>\n                <Col xs={12} md={8} className=\"text-end\">\n                    <Button variant=\"success\" onClick={() => window.location.href = '/reviews'}>\n                        Show Review List\n                    </Button>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xs={12} md={8}>\n                    <Row>\n                        {filteredProducts.map(product => (\n                            <Col key={product.id} xs={12} sm={6} md={4} className=\"mb-4\">\n                                <Card className=\"h-100\">\n                                    <Card.Body className=\"d-flex flex-column\">\n                                        <Card.Title>{product.title}</Card.Title>\n                                        <Card.Text>\n                                            <div>Price: {product.price}</div>\n                                            <div>Category: {product.category}</div>\n                                            <div>Average Rate: {getAverageRating(product.reviews)}</div>\n                                        </Card.Text>\n                                        <Button \n                                            variant=\"primary\" \n                                            onClick={() => handleProductSelect(product)}\n                                            className=\"mt-auto\"\n                                        >\n                                            Add New Review\n                                        </Button>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        ))}\n                    </Row>\n                </Col>\n                \n                <Col xs={12} md={4}>\n                    <div className=\"border rounded p-3\">\n                        <h5>Reviews details:</h5>\n                        {selectedProduct ? (\n                            <>\n                                <div>Product: {selectedProduct.id}</div>\n                                <div>Title: {selectedProduct.title}</div>\n                                <div>Category: {selectedProduct.category}</div>\n                                <div>Price: {selectedProduct.price}</div>\n                                \n                                {successMessage ? (\n                                    <div className=\"mt-3 text-success\">\n                                        {successMessage}\n                                    </div>\n                                ) : (\n                                    <>\n                                        <h6 className=\"mt-3\">Add a new Review</h6>\n                                        <Form>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Reviewer Name</Form.Label>\n                                                <Form.Control \n                                                    type=\"text\" \n                                                    value={reviewer}\n                                                    onChange={(e) => setReviewer(e.target.value)}\n                                                    isInvalid={!!validationError.reviewer}\n                                                />\n                                                {validationError.reviewer && (\n                                                    <Form.Text className=\"text-danger\">\n                                                        {validationError.reviewer}\n                                                    </Form.Text>\n                                                )}\n                                            </Form.Group>\n                                            \n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Comment</Form.Label>\n                                                <Form.Control \n                                                    as=\"textarea\" \n                                                    rows={3}\n                                                    value={comment}\n                                                    onChange={(e) => setComment(e.target.value)}\n                                                    isInvalid={!!validationError.comment}\n                                                />\n                                                {validationError.comment && (\n                                                    <Form.Text className=\"text-danger\">\n                                                        {validationError.comment}\n                                                    </Form.Text>\n                                                )}\n                                            </Form.Group>\n                                            \n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Rating</Form.Label>\n                                                <div className=\"d-flex\">\n                                                    {[1, 2, 3, 4, 5].map(value => (\n                                                        <Form.Check\n                                                            key={value}\n                                                            inline\n                                                            type=\"radio\"\n                                                            label={value}\n                                                            name=\"rating\"\n                                                            value={value}\n                                                            checked={rating === value}\n                                                            onChange={() => setRating(value)}\n                                                            className=\"me-3\"\n                                                        />\n                                                    ))}\n                                                </div>\n                                            </Form.Group>\n                                            \n                                            <Button \n                                                variant=\"warning\" \n                                                onClick={handleSubmitReview}\n                                            >\n                                                Send Review\n                                            </Button>\n                                        </Form>\n                                    </>\n                                )}\n                            </>\n                        ) : (\n                            <div className=\"text-danger\">Select a product to Review!</div>\n                        )}\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Products; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}